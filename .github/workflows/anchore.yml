name: Syft SBOM + Grype vuln scan

on:
  push:
    tags: ["v*"]
  pull_request:

# Default to least-privilege; escalate per-job when needed
permissions:
  contents: read
  security-events: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sbom:
    runs-on: ubuntu-latest
    # This job needs contents:write only when pushing a tag (to attach assets to the release)
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: Generate SBOM (always)
        id: sbom
        uses: anchore/sbom-action@v0
        with:
          path: .
          format: spdx-json
          output-file: sbom-source.spdx.json
          upload-artifact: true
          artifact-name: sbom-artifact
          # upload-release-assets input supports expressions; only true for tag pushes
          upload-release-assets: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}

  vuln-scan:
    needs: sbom
    runs-on: ubuntu-latest
    steps:
      - name: Download SBOM artifact
        uses: actions/download-artifact@v4
        with:
          name: sbom-artifact
          path: .

      - name: Scan SBOM with grype
        id: scan
        uses: anchore/scan-action@v6
        with:
          sbom: sbom-source.spdx.json
          # Keep it light; include SARIF (for Code Scanning) and CycloneDX (ecosystem tooling)
          output-format: table
          fail-build: false
          cache-db: true

      - name: Upload SARIF to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Upload scan results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: vuln-scan-results
          path: |
            ${{ steps.scan.outputs.sarif }}
            ${{ steps.scan.outputs.cyclonedx }}

